- hosts: all
  become: yes
  tasks:

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
          # in the future, test against V3 API in stead.
          IDENTITY_API_VERSION=3
          OS_USER_DOMAIN_ID=default
          OS_PROJECT_DOMAIN_ID=default
          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export GIT_BASE=https://github.com
          export ZUUL_BRANCH=master
          export ZUUL_REF=refs/tags/mitaka-eol
          export ZUUL_URL=https://github.com
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x

          # Prep the testing environment by creating the required testing resources and environment variables
          pushd /opt/stack/new/devstack
          source openrc admin admin
          openstack flavor create m1.acctest --id 99 --ram 512 --disk 5 --vcpu 1 --ephemeral 10
          openstack flavor create m1.resize --id 98 --ram 512 --disk 6 --vcpu 1 --ephemeral 10
          _NETWORK_ID=$(openstack network show private -c id -f value)
          _EXTGW_ID=$(openstack network show public -c id -f value)
          _IMAGE=$(openstack image list | grep -i cirros | head -n 1)
          _IMAGE_ID=$(echo $_IMAGE | awk -F\| '{print $2}' | tr -d ' ')
          _IMAGE_NAME=$(echo $_IMAGE | awk -F\| '{print $3}' | tr -d ' ')
          echo export OS_IMAGE_NAME="$_IMAGE_NAME" >> openrc
          echo export OS_IMAGE_ID="$_IMAGE_ID" >> openrc
          echo export OS_NETWORK_ID=$_NETWORK_ID >> openrc
          echo export OS_EXTGW_ID=$_EXTGW_ID >> openrc
          echo export OS_POOL_NAME="public" >> openrc
          echo export OS_FLAVOR_ID=99 >> openrc
          echo export OS_FLAVOR_ID_RESIZE=98 >> openrc
          echo export OS_SHARE_NETWORK_ID=foobar >> openrc
          echo export OS_DOMAIN_NAME=Default >> openrc
          source openrc admin admin
          popd

          go get ./... || true
          {
          # Only enable these successful test cases
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/identity/v3/ 2>&1
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/networking/v2/ 2>&1
          go test -v -tags "fixtures acceptance" ./acceptance/openstack/blockstorage/v2/ 2>&1
          go test -v -tags "fixtures acceptance" -run "SecGroup|Flavor" ./acceptance/openstack/compute/v2/ 2>&1
          # To enable more after the fix of https://github.com/gophercloud/gophercloud/issues/608
          # go test -v -tags "fixtures acceptance" ./acceptance/openstack/imageservice/v2/
          # go test -v -tags "fixtures acceptance" ./acceptance/openstack/identity/v2/
          # go test -v -tags "fixtures acceptance" ./acceptance/openstack/compute/v2/
          } > $TEST_RESULTS_TXT
        executable: /bin/bash
        chdir: '{{ zuul.project.src_dir }}'
      environment: '{{ golang_env }}'
