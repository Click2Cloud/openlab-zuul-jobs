# gophercloud
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      # pass
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'gophercloud'
    - os_branch in stable_branches

- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
      # in the future, test against V3 API in stead.
      IDENTITY_API_VERSION=3
      OS_USER_DOMAIN_ID=default
      OS_PROJECT_DOMAIN_ID=default
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'gophercloud'
    - os_branch in eol_branches

# terraform-provider-openstack
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      NETWORK_GATEWAY=10.0.0.1
      enable_service trove tr-api tr-tmgr tr-cond
      enable_plugin trove git://git.openstack.org/openstack/trove
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform-provider-openstack'
    - os_branch in stable_branches

- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      NETWORK_GATEWAY=10.0.0.1
      # Default value is 2.0 in Mitaka, and 2.0 API will be deprecated
      # in the future, test against V3 API in stead.
      IDENTITY_API_VERSION=3
      export OS_USER_DOMAIN_ID=default
      export OS_PROJECT_DOMAIN_ID=default
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform-provider-openstack'
    - os_branch in eol_branches

# terraform
- name: create devstack local conf with {{ os_branch }} for {{ sdk }}
  shell:
    cmd: |
      set -e
      set -x
      cat << EOF >> /tmp/dg-local.conf
      [[local|localrc]]
      # pass
      EOF
    executable: /bin/bash
    chdir: '{{ ansible_user_dir }}/workspace'
  environment: '{{ zuul | zuul_legacy_vars }}'
  when:
    - sdk == 'terraform'
    - os_branch in stable_branches
